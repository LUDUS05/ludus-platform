name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_ENV: test
  CI: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
      
      - name: Type check
        run: npm run typecheck
      
      - name: Build
        run: npm run build
      
      - name: Run tests
        run: npm run test
      
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      
      - name: Start API service
        run: |
          export PORT=4000
          npm --workspace apps/api run dev &
          echo "API service started on port $PORT"
          echo "API_PID=$!" >> $GITHUB_ENV
      
      - name: Wait for API to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:4000/health 2>/dev/null; do sleep 1; done'
        env:
          ACTIONS_STEP_DEBUG: true
      
      - name: Start Web service
        run: |
          export PORT=3000
          npm --workspace apps/web run dev &
          echo "Web service started on port $PORT"
          echo "WEB_PID=$!" >> $GITHUB_ENV
      
      - name: Wait for Web to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:3000/health 2>/dev/null; do sleep 1; done'
        env:
          ACTIONS_STEP_DEBUG: true
      
      - name: Run E2E tests
        run: npm --workspace apps/web run e2e
        env:
          PLAYWRIGHT_HTML_REPORT: playwright-report
          BASE_URL: http://localhost:3000
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30
      
      - name: Cleanup services
        if: always()
        run: |
          if [ ! -z "$API_PID" ]; then
            kill $API_PID 2>/dev/null || true
          fi
          if [ ! -z "$WEB_PID" ]; then
            kill $WEB_PID 2>/dev/null || true
          fi


